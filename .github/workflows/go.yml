name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

#    - name: Download DLLs for Windows
#      run: >
#        C:\msys64\usr\bin\wget.exe https://github.com/webview/webview_csharp/raw/master/libs/webview.dll
#        https://github.com/webview/webview_csharp/raw/master/libs/WebView2Loader.dll
#      if: ${{ success() && matrix.os == 'windows-latest' }}

    - name: Install dependencies on Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends libwebkit2gtk-4.0-dev
      if: ${{ success() && matrix.os == 'ubuntu-18.04' }}

    - name: Cache .yarn
      uses: actions/cache@v2
      env:
        cache-name: cache-yarn
      with:
        path: .yarn
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Get dependencies
      run: |
        yarn install --immutable
        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#            dep ensure
#        fi

    - name: Build
      run: yarn build

#    - name: Test
#      run: go test -v .
    
    - name: Upload a Build Artifact (Linux)
      uses: actions/upload-artifact@v2.1.4
      if: ${{ success() && matrix.os == 'ubuntu-18.04' }}
      with:
        # Artifact name
        name: writer-linux # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: writer
        # The desired behavior if no files are found using the provided path.

    - name: Upload a Build Artifact (macOS)
      uses: actions/upload-artifact@v2.1.4
      if: ${{ success() && matrix.os == 'macos-latest' }}
      with:
        name: writer-macos
        path: writer

#    - name: Upload a Build Artifact (Windows)
#      uses: actions/upload-artifact@v2.1.4
#      if: ${{ success() && matrix.os == 'windows-latest' }}
#      with:
#        name: writer-windows
#        path: |
#          writer.exe
#          webview.dll
#          WebView2Loader.dll
